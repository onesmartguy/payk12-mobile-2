import 'dotenv/config'; // Load .env files
import { ExpoConfig, ConfigContext } from '@expo/config';
const { withAndroidManifest, withInfoPlist } = require('@expo/config-plugins');
// Default Expo configuration based on the environment
const ENV = process.env.APP_ENV || 'development';

const GITHUB_RUN_NUMBER = process.env.GITHUB_RUN_NUMBER || '1'; // CI/CD run number
const BUILD_NUMBER = parseInt(GITHUB_RUN_NUMBER, 10);



const configureApp = ({ config }: ConfigContext): Partial<ExpoConfig> => {
    
    config.slug = 'payk12-box-office'
    config.name = 'PayK12 Box Office';
    config.owner = 'raptortechnologies'
    config.userInterfaceStyle = 'automatic'
    config.version = `1.0.${BUILD_NUMBER}`; // Auto-increment version based on GitHub Actions run number


    config.extra = {
        apiUrl: process.env.EXPO_PUBLIC_API_URL,
        siteUrl: process.env.EXPO_PUBLIC_SITE_URL,
        envName: ENV,
        version: config.version,
        eas: {
            projectId: "8f1f6de6-a4b4-4ab8-87d6-4768cd3db70e"
        }
    }
    configurePlugings(config)
    config.ios = configureIOS(config);
    config.android = configureDroid(config);
    return config;
};
const configurePlugings = (config: Partial<ExpoConfig>) => {
    config.plugins =
    [
        'expo-router',
        [
            'expo-camera',
            {
                cameraPermission: 'Allow $(PRODUCT_NAME) to access your camera.',
                microphonePermission: 'Allow $(PRODUCT_NAME) to access your microphone.',
                recordAudioAndroid: true,
            },
        ],
        [
            'expo-location',
            {
                locationAlwaysAndWhenInUsePermission: {
                    ios: 'Allow $(PRODUCT_NAME) to access your location at all times.',
                    android: {
                        fine: 'Allow $(PRODUCT_NAME) to access precise location.',
                        coarse: 'Allow $(PRODUCT_NAME) to access approximate location.',
                    },
                },
            },
        ],
        [
            'expo-media-library',
            {
                photoLibraryPermission: 'Allow $(PRODUCT_NAME) to access your photo library.',
            },
        ],
        [
            'expo-bluetooth',
            {
                bluetoothPermission: 'Allow $(PRODUCT_NAME) to use Bluetooth for communication.',
            },
        ],
        [
            'expo-nfc',
            {
                nfcPermission: 'Allow $(PRODUCT_NAME) to use NFC for ticket scanning.',
            },
        ],
        [
            'expo-secure-store',
            {
                faceIDPermission: 'Allow $(PRODUCT_NAME) to use Face ID for authentication.',
            },
        ],
    ];
};

const configureIOS = (config: Partial<ExpoConfig>) => withInfoPlist(config, async (cfg: Partial<ExpoConfig>) => {
    if (cfg.ios) {
        cfg.ios.bundleIdentifier = 'com.payk12.ticketmanager'
        cfg.ios.buildNumber = BUILD_NUMBER.toString();

        if (cfg.ios.infoPlist) {
            cfg.ios.infoPlist = {
                ...(cfg.ios.infoPlist || {}),
                LSApplicationQueriesSchemes: ["https", "http"],
                NSCameraUsageDescription: 'Allow $(PRODUCT_NAME) to access your camera.',
                NSMicrophoneUsageDescription: 'Allow $(PRODUCT_NAME) to access your microphone.',
                NSFaceIDUsageDescription: 'Allow $(PRODUCT_NAME) to use Face ID for authentication.',
                NSLocationWhenInUseUsageDescription: 'Allow $(PRODUCT_NAME) to access your location when the app is in use.',
                NSLocationAlwaysUsageDescription: 'Allow $(PRODUCT_NAME) to access your location in the background.',
                NSBluetoothAlwaysUsageDescription: 'Allow $(PRODUCT_NAME) to use Bluetooth.',
                NSPhotoLibraryUsageDescription: 'Allow $(PRODUCT_NAME) to access your photo library.',
                NSNFCReaderUsageDescription: 'Allow $(PRODUCT_NAME) to use NFC for ticket scanning.',
                NSPhotoLibraryAddUsageDescription: 'Allow $(PRODUCT_NAME) to save photos to your photo library.'
            }
        }
    }
    return cfg.ios;
})
const configureDroid = (config: Partial<ExpoConfig>) => withAndroidManifest(config, async (cfg: Partial<ExpoConfig>) => {
    if (cfg.android) {
        cfg.android.versionCode = BUILD_NUMBER
        cfg.android.permissions = [
            ...(cfg.android.permissions || []),
            'android.permission.CAMERA',
            'android.permission.RECORD_AUDIO',
            'android.permission.ACCESS_FINE_LOCATION',
            'android.permission.ACCESS_COARSE_LOCATION',
            'android.permission.READ_EXTERNAL_STORAGE',
            'android.permission.WRITE_EXTERNAL_STORAGE',
            'android.permission.BLUETOOTH',
            'android.permission.BLUETOOTH_ADMIN',
            'android.permission.NFC',
        ];
        cfg.android.package = 'com.payk12.ticketmanager';
    }
    return cfg.android;
})

export default configureApp;